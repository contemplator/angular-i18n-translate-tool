{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/google-translate.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n// import { parseString } from 'xml2js';\nimport * as xml2js from 'xml2js';\nimport { GoogleTranslateService } from './google-translate.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  fileContent: any;\n  transList: TransItem[] = [];\n  scrollHeight = '600px';\n  filename = '';\n\n  constructor(\n    private translateService: GoogleTranslateService\n  ) { }\n\n  ngOnInit() {\n    this.scrollHeight = (window.innerHeight - 168) + 'px';\n  }\n\n  onFileUpload(event): void {\n    const file = event.target.files[0];\n    this.filename = file.name;\n    let fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      const xmlContent = fileReader.result;\n      this.parseToJson(xmlContent as string);\n    }\n    fileReader.readAsText(file);\n  }\n\n  parseToJson(xml: string): void {\n    xml2js.parseString(xml, (err, result) => {\n      this.fileContent = result;\n      this.transList = this.fileContent.xliff.file[0].body[0]['trans-unit'].map(item => {\n        if (!item.target) {\n          item.target = [];\n        }\n        return item;\n      });\n    });\n  }\n\n  onExportClick(): void {\n    let content = this.parseToXlf();\n    let link = window.document.createElement('a');\n    link.setAttribute('href', 'data:text;charset=utf-8,' + encodeURI(content));\n    link.setAttribute('download', this.filename);\n    link.click();\n  }\n\n  parseToXlf(): string {\n    let header = `<?xml version='1.0' encoding='UTF-8' ?>\n<xliff version='1.2' xmlns='urn:oasis:names:tc:xliff:document:1.2'>\n  <file source-language='en' datatype='plaintext' original='ng2.template'>\n    <body>`;\n    let footer = `\n    </body>\n  </file>\n</xliff>`;\n    let content = '';\n    this.transList.forEach(item => {\n      try {\n        content += `\n        <trans-unit id='${this.parseEscapeCharacter(item.$.id)}' datatype='html'>\n          <source>${this.parseEscapeCharacter(item.source[0])}</source>\n          <context-group purpose='location'>\n            <context context-type='sourcefile'>${this.parseEscapeCharacter(item['context-group'][0].context[0]._)}</context>\n            <context context-type='linenumber'>${this.parseEscapeCharacter(item['context-group'][0].context[1]._)}</context>\n          </context-group>\n          <note priority='1' from='description'>${this.parseEscapeCharacter(item.note[0]._)}</note>\n          <note priority='1' from='meaning'>${this.parseEscapeCharacter(item.note[1]._)}</note>\n          <target>${this.parseEscapeCharacter(item.target[0])}</target>\n        </trans-unit>`;\n      } catch (error) {\n        console.error(item, error);\n      }\n    });\n    return header + content + footer;\n  }\n\n  getFilePath(path: string): string {\n    const startIndex = path.indexOf('app/');\n    return path.substring(startIndex + 4);\n  }\n\n  async onGoogleTranslateClick(): Promise<void> {\n    for (const row of this.transList) {\n      if (row.source && row.source[0] && typeof (row.source[0]) === 'string') {\n        const result = await this.translateService.translate(row.source && row.source[0] ? row.source[0] : '').toPromise();\n        row.target = [result];\n      }\n    }\n  }\n\n  parseEscapeCharacter(str: string): string {\n    return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '%27');\n  }\n}\n\ninterface TransItem {\n  $: { id: string, datatype: string };    // id 及 資料類型: html\n  'context-group': TransLocation;         // 翻譯文字在原始檔案的位置資訊\n  note: TransNote[];                      // 0: 摘要, 1: 詳細說明\n  source: string[];                       // 長度為1, 要翻譯的文字\n  target: string[];                       // 翻譯結果\n}\n\ninterface TransLocation {\n  $: { purpose: string };                 // purpose: location\n  context: any[];                         // 0: 檔案名稱, 1: 行數及字元數\n}\n\ninterface TransNote {\n  $: { priority: string, from: string };  // priority: 越小越有參考價值, from: meaning 或 description\n  _: string;                              // 說明\n}\n\ninterface XLF {\n\n}\n","<h1>翻譯工具 - 只支援 xlf 檔案</h1>\n\n<div class=\"flex flex-justify\">\n  <label>\n    選擇檔案\n    <input type=\"file\" (change)=\"onFileUpload($event)\">\n  </label>\n  <div>\n    <button pButton (click)=\"onGoogleTranslateClick()\" label=\"Google 翻譯\"></button>\n    <button pButton (click)=\"onExportClick()\" label=\"匯出\"></button>\n  </div>\n</div>\n\n<hr>\n\n<div class=\"translate-table\">\n  <p-table [value]=\"transList\" [scrollable]=\"true\" [scrollHeight]=\"scrollHeight\">\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th>Id</th>\n        <!-- <th>位置</th> -->\n        <th>意義</th>\n        <th>說明</th>\n        <th>原始字樣</th>\n        <th>翻譯結果</th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-item>\n      <tr>\n        <td>{{item.$.id}}</td>\n        <!-- <td>\n          <ng-container *ngIf=\"item['context-group']\">{{getFilePath(item['context-group'][0].context[0]._)}}</ng-container>\n        </td> -->\n        <td>\n          <ng-container *ngIf=\"item.note && item.note[0]\">\n            {{item.note[0]._}}\n          </ng-container>\n        </td>\n        <td>\n          <ng-container *ngIf=\"item.note && item.note[1]\">\n            {{item.note[1]._}}\n          </ng-container>\n        </td>\n        <td>\n          <span>\n            {{item.source[0]}}\n          </span>\n        </td>\n        <td>\n          <input type=\"text\" pInputText [(ngModel)]=\"item.target[0]\">\n        </td>\n      </tr>\n    </ng-template>\n  </p-table>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { TableModule } from 'primeng/table';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    TableModule,\n    ButtonModule,\n    InputTextModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class GoogleTranslateService {\n  private key = 'AIzaSyB9pmfhbNiOTXgMUZzQo3rowtLNxPZZAQw';\n\n  constructor(private httpClient: HttpClient) { }\n\n  translate(q: string, source = 'zh-TW', target = 'en', format = 'text'): Observable<any> {\n    const headerParam: any = { 'Content-Type': 'application/json' };\n    const headers = new HttpHeaders(headerParam);\n    const options = { headers };\n\n    const url = `https://translation.googleapis.com/language/translate/v2?key=${this.key}`;\n    return this.httpClient.post(url, {\n      \"q\": q,\n      \"source\": source,\n      \"target\": target,\n      \"format\": format\n    }, options).pipe(\n      map((res: any) => {\n        return res.data.translations[0].translatedText;\n      }),\n      catchError(error => {\n        console.error(error);\n        return throwError(error);\n      })\n    );\n  }\n\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"names":[],"sourceRoot":"webpack:///"}